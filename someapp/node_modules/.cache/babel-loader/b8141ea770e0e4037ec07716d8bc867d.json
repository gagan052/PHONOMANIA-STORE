{"ast":null,"code":"import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n  constructor() {\n    super(...arguments);\n    this.removePointerDownListener = noop;\n  }\n\n  onPointerDown(pointerDownEvent) {\n    this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n      transformPagePoint: this.node.getTransformPagePoint()\n    });\n  }\n\n  createPanHandlers() {\n    const {\n      onPanSessionStart,\n      onPanStart,\n      onPan,\n      onPanEnd\n    } = this.node.getProps();\n    return {\n      onSessionStart: onPanSessionStart,\n      onStart: onPanStart,\n      onMove: onPan,\n      onEnd: (event, info) => {\n        delete this.session;\n        onPanEnd && onPanEnd(event, info);\n      }\n    };\n  }\n\n  mount() {\n    this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", event => this.onPointerDown(event));\n  }\n\n  update() {\n    this.session && this.session.updateHandlers(this.createPanHandlers());\n  }\n\n  unmount() {\n    this.removePointerDownListener();\n    this.session && this.session.end();\n  }\n\n}\n\nexport { PanGesture };","map":{"version":3,"sources":["/Users/gagan/Desktop/sanjeev/someapp/node_modules/framer-motion/dist/es/gestures/pan/index.mjs"],"names":["PanSession","addPointerEvent","Feature","noop","PanGesture","constructor","arguments","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","transformPagePoint","node","getTransformPagePoint","onPanSessionStart","onPanStart","onPan","onPanEnd","getProps","onSessionStart","onStart","onMove","onEnd","event","info","mount","current","update","updateHandlers","unmount","end"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBF,OAAzB,CAAiC;AAC7BG,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,yBAAL,GAAiCJ,IAAjC;AACH;;AACDK,EAAAA,aAAa,CAACC,gBAAD,EAAmB;AAC5B,SAAKC,OAAL,GAAe,IAAIV,UAAJ,CAAeS,gBAAf,EAAiC,KAAKE,iBAAL,EAAjC,EAA2D;AAAEC,MAAAA,kBAAkB,EAAE,KAAKC,IAAL,CAAUC,qBAAV;AAAtB,KAA3D,CAAf;AACH;;AACDH,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEI,MAAAA,iBAAF;AAAqBC,MAAAA,UAArB;AAAiCC,MAAAA,KAAjC;AAAwCC,MAAAA;AAAxC,QAAqD,KAAKL,IAAL,CAAUM,QAAV,EAA3D;AACA,WAAO;AACHC,MAAAA,cAAc,EAAEL,iBADb;AAEHM,MAAAA,OAAO,EAAEL,UAFN;AAGHM,MAAAA,MAAM,EAAEL,KAHL;AAIHM,MAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpB,eAAO,KAAKf,OAAZ;AACAQ,QAAAA,QAAQ,IAAIA,QAAQ,CAACM,KAAD,EAAQC,IAAR,CAApB;AACH;AAPE,KAAP;AASH;;AACDC,EAAAA,KAAK,GAAG;AACJ,SAAKnB,yBAAL,GAAiCN,eAAe,CAAC,KAAKY,IAAL,CAAUc,OAAX,EAAoB,aAApB,EAAoCH,KAAD,IAAW,KAAKhB,aAAL,CAAmBgB,KAAnB,CAA9C,CAAhD;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,SAAKlB,OAAL,IAAgB,KAAKA,OAAL,CAAamB,cAAb,CAA4B,KAAKlB,iBAAL,EAA5B,CAAhB;AACH;;AACDmB,EAAAA,OAAO,GAAG;AACN,SAAKvB,yBAAL;AACA,SAAKG,OAAL,IAAgB,KAAKA,OAAL,CAAaqB,GAAb,EAAhB;AACH;;AA7B4B;;AAgCjC,SAAS3B,UAAT","sourcesContent":["import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n"]},"metadata":{},"sourceType":"module"}