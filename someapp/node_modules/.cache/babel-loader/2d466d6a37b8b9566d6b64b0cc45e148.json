{"ast":null,"code":"import { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { attachTimeline } from './utils/attach-timeline.mjs';\n\nclass NativeAnimationControls {\n  constructor(animation) {\n    this.animation = animation;\n  }\n\n  get duration() {\n    var _a, _b, _c;\n\n    const durationInMs = ((_b = (_a = this.animation) === null || _a === void 0 ? void 0 : _a.effect) === null || _b === void 0 ? void 0 : _b.getComputedTiming().duration) || ((_c = this.options) === null || _c === void 0 ? void 0 : _c.duration) || 300;\n    return millisecondsToSeconds(Number(durationInMs));\n  }\n\n  get time() {\n    var _a;\n\n    if (this.animation) {\n      return millisecondsToSeconds(((_a = this.animation) === null || _a === void 0 ? void 0 : _a.currentTime) || 0);\n    }\n\n    return 0;\n  }\n\n  set time(newTime) {\n    if (this.animation) {\n      this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n  }\n\n  get speed() {\n    return this.animation ? this.animation.playbackRate : 1;\n  }\n\n  set speed(newSpeed) {\n    if (this.animation) {\n      this.animation.playbackRate = newSpeed;\n    }\n  }\n\n  get state() {\n    return this.animation ? this.animation.playState : \"finished\";\n  }\n\n  get startTime() {\n    return this.animation ? this.animation.startTime : null;\n  }\n\n  get finished() {\n    return this.animation ? this.animation.finished : Promise.resolve();\n  }\n\n  play() {\n    this.animation && this.animation.play();\n  }\n\n  pause() {\n    this.animation && this.animation.pause();\n  }\n\n  stop() {\n    if (!this.animation || this.state === \"idle\" || this.state === \"finished\") {\n      return;\n    }\n\n    if (this.animation.commitStyles) {\n      this.animation.commitStyles();\n    }\n\n    this.cancel();\n  }\n\n  flatten() {\n    var _a, _b;\n\n    if (!this.animation || !((_a = this.options) === null || _a === void 0 ? void 0 : _a.allowFlatten)) return;\n    (_b = this.animation.effect) === null || _b === void 0 ? void 0 : _b.updateTiming({\n      easing: \"linear\"\n    });\n  }\n\n  attachTimeline(timeline) {\n    if (this.animation) attachTimeline(this.animation, timeline);\n    return noop;\n  }\n\n  complete() {\n    this.animation && this.animation.finish();\n  }\n\n  cancel() {\n    try {\n      this.animation && this.animation.cancel();\n    } catch (e) {}\n  }\n\n}\n\nexport { NativeAnimationControls };","map":{"version":3,"sources":["/Users/gagan/Desktop/sanjeev/someapp/node_modules/motion-dom/dist/es/animation/waapi/NativeAnimationControls.mjs"],"names":["millisecondsToSeconds","secondsToMilliseconds","noop","attachTimeline","NativeAnimationControls","constructor","animation","duration","_a","_b","_c","durationInMs","effect","getComputedTiming","options","Number","time","currentTime","newTime","speed","playbackRate","newSpeed","state","playState","startTime","finished","Promise","resolve","play","pause","stop","commitStyles","cancel","flatten","allowFlatten","updateTiming","easing","timeline","complete","finish","e"],"mappings":"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","sourcesContent":["import { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { attachTimeline } from './utils/attach-timeline.mjs';\n\nclass NativeAnimationControls {\n    constructor(animation) {\n        this.animation = animation;\n    }\n    get duration() {\n        var _a, _b, _c;\n        const durationInMs = ((_b = (_a = this.animation) === null || _a === void 0 ? void 0 : _a.effect) === null || _b === void 0 ? void 0 : _b.getComputedTiming().duration) ||\n            ((_c = this.options) === null || _c === void 0 ? void 0 : _c.duration) ||\n            300;\n        return millisecondsToSeconds(Number(durationInMs));\n    }\n    get time() {\n        var _a;\n        if (this.animation) {\n            return millisecondsToSeconds(((_a = this.animation) === null || _a === void 0 ? void 0 : _a.currentTime) || 0);\n        }\n        return 0;\n    }\n    set time(newTime) {\n        if (this.animation) {\n            this.animation.currentTime = secondsToMilliseconds(newTime);\n        }\n    }\n    get speed() {\n        return this.animation ? this.animation.playbackRate : 1;\n    }\n    set speed(newSpeed) {\n        if (this.animation) {\n            this.animation.playbackRate = newSpeed;\n        }\n    }\n    get state() {\n        return this.animation ? this.animation.playState : \"finished\";\n    }\n    get startTime() {\n        return this.animation ? this.animation.startTime : null;\n    }\n    get finished() {\n        return this.animation ? this.animation.finished : Promise.resolve();\n    }\n    play() {\n        this.animation && this.animation.play();\n    }\n    pause() {\n        this.animation && this.animation.pause();\n    }\n    stop() {\n        if (!this.animation ||\n            this.state === \"idle\" ||\n            this.state === \"finished\") {\n            return;\n        }\n        if (this.animation.commitStyles) {\n            this.animation.commitStyles();\n        }\n        this.cancel();\n    }\n    flatten() {\n        var _a, _b;\n        if (!this.animation || !((_a = this.options) === null || _a === void 0 ? void 0 : _a.allowFlatten))\n            return;\n        (_b = this.animation.effect) === null || _b === void 0 ? void 0 : _b.updateTiming({ easing: \"linear\" });\n    }\n    attachTimeline(timeline) {\n        if (this.animation)\n            attachTimeline(this.animation, timeline);\n        return noop;\n    }\n    complete() {\n        this.animation && this.animation.finish();\n    }\n    cancel() {\n        try {\n            this.animation && this.animation.cancel();\n        }\n        catch (e) { }\n    }\n}\n\nexport { NativeAnimationControls };\n"]},"metadata":{},"sourceType":"module"}