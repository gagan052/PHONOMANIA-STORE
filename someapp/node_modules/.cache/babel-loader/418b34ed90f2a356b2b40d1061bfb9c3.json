{"ast":null,"code":"import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes) {\n  let {\n    delay = 0,\n    duration = 300,\n    repeat = 0,\n    repeatType = \"loop\",\n    ease = \"easeInOut\",\n    times\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keyframeOptions = {\n    [valueName]: keyframes\n  };\n  if (times) keyframeOptions.offset = times;\n  const easing = mapEasingToNativeEasing(ease, duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n\n  if (statsBuffer.value) {\n    activeAnimations.waapi++;\n  }\n\n  const animation = element.animate(keyframeOptions, {\n    delay,\n    duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n\n  if (statsBuffer.value) {\n    animation.finished.finally(() => {\n      activeAnimations.waapi--;\n    });\n  }\n\n  return animation;\n}\n\nexport { startWaapiAnimation };","map":{"version":3,"sources":["/Users/gagan/Desktop/sanjeev/someapp/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"names":["mapEasingToNativeEasing","statsBuffer","activeAnimations","startWaapiAnimation","element","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","offset","easing","Array","isArray","value","waapi","animation","animate","fill","iterations","direction","finished","finally"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,WAAlC,EAA+CC,gBAA/C,QAAuE,YAAvE;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA6J;AAAA,MAAjG;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,QAAQ,GAAG,GAAxB;AAA6BC,IAAAA,MAAM,GAAG,CAAtC;AAAyCC,IAAAA,UAAU,GAAG,MAAtD;AAA8DC,IAAAA,IAAI,GAAG,WAArE;AAAkFC,IAAAA;AAAlF,GAAiG,uEAAJ,EAAI;AACzJ,QAAMC,eAAe,GAAG;AAAE,KAACR,SAAD,GAAaC;AAAf,GAAxB;AACA,MAAIM,KAAJ,EACIC,eAAe,CAACC,MAAhB,GAAyBF,KAAzB;AACJ,QAAMG,MAAM,GAAGf,uBAAuB,CAACW,IAAD,EAAOH,QAAP,CAAtC;AACA;AACJ;AACA;;AACI,MAAIQ,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EACIF,eAAe,CAACE,MAAhB,GAAyBA,MAAzB;;AACJ,MAAId,WAAW,CAACiB,KAAhB,EAAuB;AACnBhB,IAAAA,gBAAgB,CAACiB,KAAjB;AACH;;AACD,QAAMC,SAAS,GAAGhB,OAAO,CAACiB,OAAR,CAAgBR,eAAhB,EAAiC;AAC/CN,IAAAA,KAD+C;AAE/CC,IAAAA,QAF+C;AAG/CO,IAAAA,MAAM,EAAE,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,GAAyBA,MAAzB,GAAkC,QAHK;AAI/CO,IAAAA,IAAI,EAAE,MAJyC;AAK/CC,IAAAA,UAAU,EAAEd,MAAM,GAAG,CAL0B;AAM/Ce,IAAAA,SAAS,EAAEd,UAAU,KAAK,SAAf,GAA2B,WAA3B,GAAyC;AANL,GAAjC,CAAlB;;AAQA,MAAIT,WAAW,CAACiB,KAAhB,EAAuB;AACnBE,IAAAA,SAAS,CAACK,QAAV,CAAmBC,OAAnB,CAA2B,MAAM;AAC7BxB,MAAAA,gBAAgB,CAACiB,KAAjB;AACH,KAFD;AAGH;;AACD,SAAOC,SAAP;AACH;;AAED,SAASjB,mBAAT","sourcesContent":["import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n"]},"metadata":{},"sourceType":"module"}